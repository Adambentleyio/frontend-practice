{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Documents\\\\4_ARCHIVE\\\\_CODE\\\\__TEMP\\\\typescript-todo\\\\src\\\\components\\\\NewTodo.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTodo = props => {\n  _s();\n  const todoTextInputRef = useRef(null);\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredText = todoTextInputRef.current.value;\n    if (enteredText.trim().length === 0) {\n      return;\n    }\n    props.onAddTodo(enteredText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text=\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n_c = NewTodo;\nexport default NewTodo;\nvar _c;\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","NewTodo","props","todoTextInputRef","submitHandler","e","preventDefault","enteredText","current","value","trim","length","onAddTodo"],"sources":["C:/Users/Adam/Documents/4_ARCHIVE/_CODE/__TEMP/typescript-todo/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from \"react\";\r\n\r\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\r\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const enteredText = todoTextInputRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    props.onAddTodo(enteredText);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label htmlFor=\"text\">Todo text</label>\r\n      <input type=\"text=\" id=\"text\" ref={todoTextInputRef} />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAAC;AAE/B,MAAMC,OAAwD,GAAIC,KAAK,IAAK;EAAA;EAC1E,MAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAI,CAAC;EAEvD,MAAMI,aAAa,GAAIC,CAAkB,IAAK;IAC5CA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAO,CAAEC,KAAK;IAEnD,IAAIF,WAAW,CAACG,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACnC;IACF;IAEAT,KAAK,CAACU,SAAS,CAACL,WAAW,CAAC;EAC9B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEH,aAAc;IAAA,wBAC5B;MAAO,OAAO,EAAC,MAAM;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAQ,eACvC;MAAO,IAAI,EAAC,OAAO;MAAC,EAAE,EAAC,MAAM;MAAC,GAAG,EAAED;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACvD;MAAA,UAAQ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEX,CAAC;AAAC,GAtBIF,OAAwD;AAAA,KAAxDA,OAAwD;AAwB9D,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}