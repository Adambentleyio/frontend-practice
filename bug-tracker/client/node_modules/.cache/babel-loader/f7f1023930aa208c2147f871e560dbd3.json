{"ast":null,"code":"import _ from 'lodash';\nimport { CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      // make a new object with existing state, make a new object from array with the key for each\n      // object being the id property from each object, then add that object to the new state object\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(...state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Adam/bug tracker/client/src/reducers/streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,YAHJ,EAIIC,aAJJ,EAKIC,WALJ,QAMO,kBANP;AASA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKN,aAAL;AACI;AACA;AACA,aAAO,EAAC,GAAGI,KAAJ;AAAW,WAAGN,CAAC,CAACS,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAd,OAAP;;AACJ,SAAKP,YAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACJ,SAAKT,aAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAW,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAvC,OAAP;;AACJ,SAAKL,WAAL;AACI,aAAO,EAAC,GAAGC,KAAJ;AAAW,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAvC,OAAP;;AACJ,SAAKN,aAAL;AACI,aAAOJ,CAAC,CAACY,IAAF,CAAO,GAAGN,KAAV,EAAiBC,MAAM,CAACG,OAAxB,CAAP;;AACJ;AACI,aAAOJ,KAAP;AAdJ;AAgBH,CAjBD","sourcesContent":["import _ from 'lodash';\r\n\r\nimport {\r\n    CREATE_STREAM,\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM,\r\n} from '../actions/types';\r\n\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type){\r\n    case FETCH_STREAMS:\r\n        // make a new object with existing state, make a new object from array with the key for each\r\n        // object being the id property from each object, then add that object to the new state object\r\n        return {...state, ..._.mapKeys(action.payload, 'id') };\r\n    case FETCH_STREAM:\r\n        return { ...state, [action.payload.id]: action.payload };\r\n    case CREATE_STREAM:\r\n        return {...state, [action.payload.id]: action.payload};\r\n    case EDIT_STREAM:\r\n        return {...state, [action.payload.id]: action.payload};\r\n    case DELETE_STREAM:\r\n        return _.omit(...state, action.payload);\r\n    default:\r\n        return state\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}