{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\bug tracker\\\\client\\\\src\\\\Components\\\\streams\\\\StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    console.log(\"listing streams\");\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `streams/delete/${stream.id}`,\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/${stream.id}`,\n            className: \"header\",\n            children: stream.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:/Users/Adam/bug tracker/client/src/Components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","componentDidMount","console","log","props","renderAdmin","stream","userId","currentUserId","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAKC,KAAL,CAAWP,YAAX;AACD;;AAEDQ,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC9C,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,iBAAgBF,MAAM,CAACG,EAAG,EAArC;AAAwC,UAAA,SAAS,EAAC,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD;AACE,UAAA,EAAE,EAAG,kBAAiBH,MAAM,CAACG,EAAG,EADlC;AAEE,UAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAcD;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,GAAnB,CAAwBN,MAAD,IAAY;AACxC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBACG,KAAKD,WAAL,CAAiBC,MAAjB,CADH,eAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWA,MAAM,CAACG,EAAG,EAAhC;AAAmC,YAAA,SAAS,EAAC,QAA7C;AAAA,sBACGH,MAAM,CAACO;AADV;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BP,MAAM,CAACQ;AAArC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAA2BR,MAAM,CAACG,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbM,CAAP;AAcD;;AAEDM,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKX,KAAL,CAAWY,UAAf,EAA2B;AACzB,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKR,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,KAAKK,YAAL,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA9DsC;;AAiEzC,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADJ;AAELH,IAAAA,aAAa,EAAEY,KAAK,CAACG,IAAN,CAAWhB,MAFrB;AAGLS,IAAAA,UAAU,EAAEI,KAAK,CAACG,IAAN,CAAWP;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAepB,OAAO,CAACuB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    console.log(\"listing streams\");\r\n    this.props.fetchStreams();\r\n  }\r\n\r\n  renderAdmin(stream) {\r\n    if (stream.userId === this.props.currentUserId) {\r\n      return (\r\n        <div className=\"right floated content\">\r\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\r\n            EDIT\r\n          </Link>\r\n\r\n          <Link\r\n            to={`streams/delete/${stream.id}`}\r\n            className=\"ui button negative\"\r\n          >\r\n            Delete\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.streams.map((stream) => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n          {this.renderAdmin(stream)}\r\n          <i className=\"large middle aligned icon camera\" />\r\n          <div className=\"content\">\r\n            <Link to={`/streams/${stream.id}`} className=\"header\">\r\n              {stream.title}\r\n            </Link>\r\n            <div className=\"description\">{stream.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderCreate() {\r\n    if (this.props.isSignedIn) {\r\n      return (\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Link to=\"/streams/new\" className=\"ui button primary\">\r\n            Create Stream\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Streams</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    streams: Object.values(state.streams),\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}