{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\streams\\\\client\\\\src\\\\Components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:/Users/Adam/streams/client/src/Components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","title","description","id","render","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAErCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,QAAIA,MAAM,CAACC,MAAP,KAAmB,KAAKH,KAAL,CAAWI,aAAlC,EAAmD;AAC/C,0BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACJ;;AAEDC,EAAAA,UAAU,GAAG;AACV,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAI;AACnC,0BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBACO,KAAKD,WAAL,CAAiBC,MAAjB,CADP,eAEI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACKA,MAAM,CAACM,KADZ,eAEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACKN,MAAM,CAACO;AADZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA2BP,MAAM,CAACQ,EAAlC;AAAA;AAAA;AAAA;AAAA,cADA;AAYH,KAbK,CAAP;AAcF;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACC,KAAKN,UAAL;AADD;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAMH;;AA7CoC;;AAgDzC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADN;AAEHF,IAAAA,aAAa,EAAES,KAAK,CAACV;AAFlB,GAAP;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream){\r\n        if (stream.userId  === this.props.currentUserId  ) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <button className=\"ui button primary\">\r\n                        Edit\r\n                    </button>\r\n                    <button className=\"ui button negative\">\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n       return this.props.streams.map(stream => {\r\n            return (\r\n            <div className=\"item\" key={stream.id}>\r\n                  {this.renderAdmin(stream)}\r\n                <i className=\"large middle aligned icon camera\" />\r\n                <div className=\"content\">\r\n                    {stream.title}\r\n                    <div className=\"description\">\r\n                        {stream.description}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (<div>\r\n            <h2>Streams</h2>\r\n            <div className=\"ui celled list\">\r\n            {this.renderList()}\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.userId}\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)\r\n"]},"metadata":{},"sourceType":"module"}